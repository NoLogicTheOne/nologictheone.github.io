{"version":3,"sources":["ChooseGame.js","Marga.js","components/variant.js","actionCreators/index.js","actionCreators/refreshInvert.js","actionCreators/addCount.js","actionCreators/addName.js","actionCreators/deleteName.js","actionCreators/modalToggle.js","actionCreators/saveChangeNames.js","actionCreators/cancelChangeNames.js","actionCreators/setQuestion.js","actionCreators/changeApp.js","components/question.js","components/ModalSetting.js","CodexesGame.js","App.js","serviceWorker.js","reducers/main.js","codexes/index.js","reducers/question.js","reducers/variants.js","reducers/settings.js","reducers/index.js","index.js"],"names":["ChooseGame","to","Button","positive","Marga","storageMarkup","localStorage","getItem","storageMargin","useState","margin","setMargin","markup","setMarkup","update","name","value","setItem","format","num","Math","round","handleChange","e","target","updateMarkup","updateMargin","Header","as","icon","textAlign","Icon","Subheader","Input","fluid","action","color","labelPosition","content","type","min","actionPosition","onChange","onBlur","onFocus","max","Variant","variant","invert","idx","showed","handleClick","answerIdx","articleNum","text","articleText","show","isRight","className","id","style","onClick","onDoubleClick","preventDefault","isWin","names","connect","state","question","settings","main","dispatch","refreshInvert","AC","addCount","dispatchProps","setQuestion","props","vars","rightVariant","rightIdx","variants","rightArticle","rightText","selected","setSelected","readyToAnswer","setReadyToAnswer","answered","setAnswered","0","1","2","3","colors","setColors","setShowed","win","setWin","nextQuestion","cleanAll","handleCheck","handleWin","handleLose","marker","newMask","i","selectedIdx","onVariantClick","map","key","checked","Codexes","changeApp","modalToggle","addName","deleteName","save","cancel","app","fullNames","modalOpen","Modal","open","Content","Radio","label","display","currentName","Checkbox","header","defaultChecked","has","Actions","count_wins","count_loose","size","App","exact","path","component","CodexesGame","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","UK","UPK","getQuestion","undefined","Set","result","getArticle","codexName","codex","article","articles","shortName","Codex","keys","Object","randomIdx","length","random","getRandomArticle","len","getRandomCodex","getVariant","questionReducer","article_text","article_num","savingNames","combineReducers","Number","delete","add","store","createStore","reducer","applyMiddleware","logger","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a94b95e6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nconst ChooseGame = () => {\r\n    return (<>\r\n        <Link to=\"/marga\">\r\n            <Button positive>Markup vs. Margin</Button>\r\n        </Link>\r\n        <Link to=\"/codexes\">\r\n            <Button positive>Codexes Game</Button>    \r\n        </Link>\r\n    </>)\r\n}\r\n\r\nexport { ChooseGame }","import React, { useState } from \"react\"\r\nimport { Input, Header, Icon } from \"semantic-ui-react\"\r\n\r\nconst Marga = () => {\r\n    let storageMarkup = localStorage.getItem(\"markup\") || \"\"\r\n    let storageMargin = localStorage.getItem(\"margin\") || \"\"\r\n    \r\n    let [margin, setMargin] = useState(storageMargin)\r\n    let [markup, setMarkup] = useState(storageMarkup)\r\n\r\n    const update = (name, value) => {\r\n        if(typeof +value !== \"number\") return\r\n        if(name === \"margin\"){\r\n            setMargin(+value)\r\n        } else {\r\n            setMarkup(+value)\r\n        }\r\n        localStorage.setItem(name, +value)\r\n    }\r\n\r\n    const format = num => Math.round(num)\r\n\r\n    const updateMargin = markup => {\r\n        update(\"margin\", format(markup * 100 / (100 + markup)))\r\n    }\r\n    const updateMarkup = margin => update(\"markup\", format(margin * 100 / (100 - margin)))\r\n\r\n    const handleChange = name => e => {\r\n        let value = e.target.value\r\n        update(name, value)\r\n        if(name === \"margin\"){\r\n            updateMarkup(margin)\r\n        } else {\r\n            updateMargin(markup)\r\n        }\r\n    } \r\n\r\n    return (<>\r\n        <Header as='h1' icon textAlign=\"center\">\r\n            <Icon name='settings' />\r\n            Markup vs. Margin\r\n            <Header.Subheader>\r\n            Просто вводи числа, любимая женушка!\r\n            </Header.Subheader>\r\n        </Header>\r\n        <br/>\r\n        <br/>\r\n        <Input fluid\r\n            action={{\r\n                color: 'teal',\r\n                labelPosition: 'left',\r\n                icon: 'cart',\r\n                content: 'Markup',\r\n            }}\r\n            type=\"number\"\r\n            min=\"0\"\r\n            actionPosition='left'\r\n            value={format(markup)}\r\n            onChange={handleChange(\"markup\")}\r\n            onBlur={handleChange(\"markup\")}\r\n            onFocus={e=>update(\"markup\", \"\")}\r\n        />\r\n        <br />\r\n        <Input fluid\r\n            action={{\r\n                color: 'teal',\r\n                labelPosition: 'left',\r\n                icon: 'cart',\r\n                content: 'Margin'\r\n            }}\r\n            actionPosition='left'\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={format(margin)}\r\n            onChange={handleChange(\"margin\")}\r\n            onBlur={handleChange(\"margin\")}\r\n            onFocus={e=>update(\"margin\", \"\")}\r\n        />\r\n    </>)\r\n}\r\n\r\n\r\n\r\nexport {Marga}","import React from 'react'\r\n\r\nexport const Variant = ({variant, invert, color, idx, showed, handleClick}) => {\r\n    let answerIdx = \"answer\" + idx\r\n    let num = variant.articleNum\r\n    let text = variant.articleText\r\n    let show = showed && !variant.isRight\r\n\r\n    return (<>\r\n        <div className=\"millionare__variant\" \r\n            id={answerIdx}\r\n            style={{\"backgroundColor\": color}}\r\n            onClick={handleClick}\r\n            onDoubleClick={e=>{e.preventDefault()}}>\r\n\r\n            {invert \r\n                ? text + (show ? (\" ( \" + num + \" )\") : \"\") \r\n                : num + (show ? (\" ( \" + text + \" )\") : \"\")}\r\n        </div>\r\n    </>)\r\n}\r\n","import {default as refreshInvert} from \"./refreshInvert\"\r\nimport {default as addCount} from \"./addCount\"\r\nimport {default as addName} from \"./addName\"\r\nimport {default as deleteName} from \"./deleteName\"\r\nimport {default as modalToggle} from \"./modalToggle\"\r\nimport {default as saveChangeNames} from \"./saveChangeNames\"\r\nimport {default as cancelChangeNames} from \"./cancelChangeNames\"\r\nimport {default as setQuestion} from \"./setQuestion\"\r\nimport {default as changeApp} from \"./changeApp\"\r\n\r\nexport default {\r\n    refreshInvert,\r\n    addCount,\r\n    addName,\r\n    deleteName,\r\n    modalToggle,\r\n    saveChangeNames,\r\n    cancelChangeNames,\r\n    setQuestion,\r\n    changeApp\r\n}","export default () => ({\r\n    type: \"REFRESH_INVERT\"\r\n})","export default isWin => ({\r\n    type: \"ADD_COUNT\",\r\n    isWin\r\n})","export default name => ({\r\n    type: \"ADD_NAME\",\r\n    name\r\n})","export default name => ({\r\n    type: \"DELETE_NAME\",\r\n    name\r\n})","export default () => ({\r\n    type: \"MODAL_TOGGLE\"\r\n})","export default () => ({\r\n    type: \"SAVE_CHANGE_NAMES\"\r\n})","export default () => ({\r\n    type: \"CANCEL_CHANGE_NAMES\"\r\n})","export default (names) => ({\r\n    type: \"SET_QUESTION\",\r\n    names\r\n})","export default () => ({\r\n    type: \"CHANGE_APP\"\r\n})","import React, { useState } from 'react';\r\nimport { Variant } from './variant';\r\n\r\nimport \"./question.css\"\r\nimport { connect } from 'react-redux';\r\nimport {default as AC} from \"../actionCreators\"\r\n\r\nfunction Question(props) {\r\n    \r\n    let {\r\n        invert, \r\n        vars, \r\n        rightVariant,\r\n        rightIdx,\r\n        addCount,\r\n        setQuestion,\r\n        refreshInvert\r\n    } = props\r\n\r\n    let variants = vars\r\n    let rightArticle = \"Статья \" + rightVariant.articleNum\r\n    let rightText = rightVariant.articleText\r\n    let defaultColors = {\r\n        0: \"transparent\",\r\n        1: \"transparent\",\r\n        2: \"transparent\",\r\n        3: \"transparent\"\r\n    }\r\n\r\n    let [selected, setSelected] = useState(-1)\r\n    let [readyToAnswer, setReadyToAnswer] = useState(false)\r\n    let [answered, setAnswered] = useState(false)\r\n    let [colors, setColors] = useState(defaultColors)\r\n    let [showed, setShowed] = useState(false)\r\n    let [win, setWin] = useState(false)\r\n    \r\n    const nextQuestion = () => {\r\n        cleanAll()\r\n        setAnswered(false)\r\n        setReadyToAnswer(false)\r\n        setShowed(false)\r\n        addCount(win)\r\n        setQuestion()\r\n        refreshInvert()\r\n    }\r\n\r\n    const handleCheck = (e) => {\r\n        if(selected === -1) return\r\n        \r\n        if(answered) {\r\n            setAnswered(false)\r\n            nextQuestion()\r\n        } \r\n        setWin(false)\r\n        if(selected === rightIdx){\r\n            handleWin()\r\n        } else {\r\n            handleLose(selected)\r\n        }\r\n        setShowed(true)\r\n        setReadyToAnswer(false)\r\n        setAnswered(true)\r\n    }\r\n\r\n    const marker = (idx, color=\"transparent\") => {\r\n        let newMask = colors\r\n        newMask[idx] = color\r\n        setColors(newMask)\r\n    }\r\n\r\n    function cleanAll() {\r\n        for(let i = 0; i < 4; i++){\r\n            marker(i)\r\n        }\r\n    }\r\n\r\n    const handleLose = (selectedIdx) => {\r\n        marker(selectedIdx, \"red\")\r\n        marker(rightIdx, \"green\")\r\n    }\r\n    \r\n    const handleWin = () => {\r\n        marker(rightIdx, \"green\")\r\n        setWin(true)\r\n    }\r\n\r\n    const onVariantClick = (idx) => () => {\r\n        if(readyToAnswer && (selected === idx)){\r\n            handleCheck()\r\n            return\r\n        }\r\n        if(answered){\r\n            return\r\n        }\r\n        cleanAll()\r\n        setSelected(idx)\r\n        setReadyToAnswer(true)\r\n        marker(idx, \"yellow\")\r\n    }\r\n\r\n    return (<>\r\n        <h3>\r\n            {invert ? rightArticle : rightText}\r\n        </h3>\r\n        {\r\n            variants.map((variant, idx) => {\r\n                return (<Variant \r\n                    key={idx}\r\n                    idx={idx}\r\n                    color={colors[idx]}\r\n                    checked={selected === idx}\r\n                    handleClick={onVariantClick(idx)}\r\n                    invert={invert}\r\n                    showed={showed}\r\n                    variant={variant}/>)\r\n            })\r\n        }\r\n        {\r\n            readyToAnswer\r\n                ? <button onClick={handleCheck}>Готов ответить</button>\r\n                : <button onClick={nextQuestion}>Следующий вопрос</button>\r\n        }\r\n    </>)\r\n}\r\n\r\nconst MSTP = state => {\r\n    return ({\r\n        ...state.question.question,\r\n        names: state.settings.names,\r\n        invert: state.main.invert\r\n    })\r\n}\r\n\r\nconst MDTP = dispatch => ({\r\n    dispatch,\r\n    refreshInvert: () => dispatch(AC.refreshInvert()),\r\n    addCount: isWin => dispatch(AC.addCount(isWin)),\r\n})\r\n\r\nconst MP = (state, dispatchProps) => {\r\n    let { names } = state\r\n    let { dispatch } = dispatchProps\r\n    \r\n    return ({\r\n        ...state,\r\n        ...dispatchProps,\r\n        setQuestion: () => dispatch(AC.setQuestion(names))\r\n    })\r\n}\r\n\r\nexport default connect(MSTP, MDTP, MP)(Question)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Icon, Modal, Header, Button, Checkbox, Radio } from 'semantic-ui-react'\r\nimport { Link } from \"react-router-dom\"  \r\n\r\nimport { default as AC } from \"../actionCreators\"\r\n\r\nfunction ModalSetting(props) {\r\n    let { changeApp, app } = props\r\n    let { fullNames, modalOpen } = props\r\n    let { modalToggle, addName, deleteName } = props\r\n    let { save, cancel, names } = props\r\n    let { Codexes, setQuestion } = props \r\n    \r\n    const applicationToggler = () => {\r\n      return (<>\r\n        <Radio\r\n          label=\"Markup vs Margin\"\r\n          name=\"chooseApp\"\r\n          checked={app == \"marga\"}\r\n          onClick={changeApp}\r\n          style={{display: \"block\"}}>\r\n        </Radio>\r\n        <Radio\r\n          label=\"CodexesGame\"\r\n          name=\"chooseApp\"\r\n          checked={ app == \"codexes\" }\r\n          onClick={changeApp}>\r\n        </Radio>\r\n      </>)\r\n    }\r\n\r\n    const getCodexesCheckboxes = () => {\r\n        return fullNames.map((currentName, idx) => (<>\r\n          <Checkbox \r\n            key={idx} \r\n            label={Codexes[currentName].header}\r\n            defaultChecked={names.has(currentName)}\r\n            onChange={e => {\r\n              if(names.has(currentName)){\r\n                deleteName(currentName)\r\n              } else {\r\n                addName(currentName)\r\n              }\r\n            }}/>\r\n          <br/>\r\n        </>))\r\n      }\r\n\r\n    return (<Modal open={modalOpen}>\r\n      <Header icon='archive' content='Настройте выдачу вопросов' />\r\n      <Modal.Content>\r\n        {applicationToggler()}\r\n      </Modal.Content>\r\n      <Modal.Content>\r\n        {getCodexesCheckboxes()}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color='red' onClick={e => {\r\n          modalToggle()\r\n          cancel()\r\n        }}>\r\n          <Icon name='cancel' /> Отменить изменения\r\n        </Button>\r\n        <Link to={\"/\" + app}>\r\n          <Button color='green' onClick={e => {\r\n            modalToggle()\r\n            save()\r\n            setQuestion()\r\n          }}>\r\n          <Icon name='checkmark' /> Сохранить\r\n          </Button>\r\n        </Link>\r\n      </Modal.Actions>\r\n    </Modal>)\r\n}\r\n\r\nconst MSTP = state => ({\r\n  ...state.settings,\r\n  Codexes: state.question.Codexes\r\n})\r\n\r\nconst MDTP = dispatch => ({\r\n    dispatch: dispatch,\r\n    changeApp: () => dispatch(AC.changeApp()),\r\n    modalToggle: () => dispatch(AC.modalToggle()),\r\n    addName: name => dispatch(AC.addName(name)),\r\n    deleteName: name => dispatch(AC.deleteName(name)),\r\n    save: () => dispatch(AC.saveChangeNames()),\r\n    cancel: () => dispatch(AC.cancelChangeNames())\r\n})\r\n\r\nconst MP = (state, dispatchProps) => {\r\n  let { names } = state\r\n  let { dispatch } = dispatchProps\r\n  \r\n  return ({\r\n      ...state,\r\n      ...dispatchProps,\r\n      setQuestion: () => dispatch(AC.setQuestion(names))\r\n  })\r\n}\r\n\r\nexport default connect(MSTP, MDTP, MP)(ModalSetting)","import React from 'react'\nimport { Icon } from 'semantic-ui-react'\nimport { connect } from \"react-redux\"\n\nimport Question from \"./components/question\"\nimport { default as AC} from \"./actionCreators\"\nimport { default as ModalSetting } from './components/ModalSetting'\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\n\nfunction CodexesGame(props) {\n  // I know about destructurisation\n  let { invert } = props\n  let { count_wins, count_loose } = props\n  let { modalToggle } = props\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Появился УК РФ</h2>\n        <Icon name=\"settings\" size=\"big\" onClick={modalToggle}/> \n        <ModalSetting />\n      </header>\n      <section>\n        <h3>Текущий счет: {count_wins} - {count_loose}</h3>\n      </section>\n      <Question invert={invert}/>\n\n    </div>\n  );\n}\n\nconst MSTP = state => ({\n  ...state.main,\n  names: state.settings.names\n}) \n\nconst MDTP = dispatch => ({\n  dispatch,\n  modalToggle: () => dispatch(AC.modalToggle()),\n})\n\nconst MP = (state, dispatchProps) => {\n  let { names } = state\n  let { dispatch } = dispatchProps\n  \n  return ({\n      ...state,\n      ...dispatchProps,\n      setQuestion: () => dispatch(AC.setQuestion(names))\n  })\n}\n\nexport default connect(MSTP, MDTP, MP)(CodexesGame);\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport {ChooseGame} from \"./ChooseGame\"\nimport {Marga} from \"./Marga\"\nimport CodexesGame from \"./CodexesGame\"\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\n\nfunction App() {\n  return (<>\n    <Switch>\n      <Route exact path=\"/\" component={ChooseGame}/>\n      <Route path=\"/codexes\" component={CodexesGame}/>\n      <Route path=\"/marga\" component={Marga}/>\n    </Switch>\n  </>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    \"count_wins\": 0,\r\n    \"count_loose\": 0,\r\n    \"invert\": true\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"REFRESH_INVERT\":\r\n            return {\r\n                ...state,\r\n                invert: Math.random() > 0.5\r\n            }\r\n        case \"ADD_COUNT\":\r\n            let { isWin } = action\r\n            console.log(state)\r\n            return {\r\n                ...state,\r\n                count_wins: state.count_wins + Number(!!isWin),\r\n                count_loose: state.count_loose + Number(!isWin)\r\n            }\r\n    }\r\n    return state\r\n}","import {default as UPK} from \"./UPK.json\"\r\nimport {default as UK} from \"./UK.json\"\r\n\r\nexport default {\r\n    UK,\r\n    UPK\r\n}","import { default as Codexes } from \"../codexes\"\r\n\r\nconst initialState = {\r\n  Codexes,\r\n  question: getQuestion(undefined, Codexes)\r\n}\r\n\r\nconst questionReducer = (state = initialState, action) => {\r\n  let { names } = action\r\n  switch (action.type){\r\n    case \"SET_QUESTION\":\r\n      return {\r\n        ...state,\r\n        question: getQuestion(names)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction getRandomArticle(codexName, idx){\r\n  const codex = Codexes[codexName]\r\n  if(idx) {\r\n    return {\r\n      article: codex.articles[idx],\r\n      idx: idx + \" \" + codex.shortName,\r\n      Codex: codex.id\r\n    }\r\n  }\r\n\r\n  let keys = Object.keys(codex.articles)\r\n  let len = keys.length\r\n  let randomIdx = keys[(len * Math.random()) | 0]\r\n\r\n  return {\r\n    article: codex.articles[randomIdx],\r\n    idx: randomIdx + \" \" + codex.shortName,\r\n    Codex: codex.id\r\n  }\r\n}\r\n\r\nfunction getQuestion(names = new Set([])){    \r\n  let result = {\r\n    vars: []\r\n  }\r\n\r\n  const getRandomCodex = () => {\r\n    let keys = names.size ? [...names] : Object.keys(Codexes)\r\n    let len = keys.length\r\n    let randomIdx = (Math.random() * len) | 0\r\n    \r\n    return keys[randomIdx]\r\n  }\r\n\r\n  const getArticle = idx => getRandomArticle(getRandomCodex(), idx)\r\n\r\n  const getVariant = ({idx: articleNum, article: articleText}, isRight) => ({\r\n    articleNum,\r\n    articleText,\r\n    isRight,\r\n    color: 'transparent'\r\n  })\r\n\r\n  let rightVariant = (Math.random() * 4) | 0\r\n  result.vars[rightVariant] = getVariant(getArticle(), true)\r\n  result.rightVariant =  result.vars[rightVariant]\r\n  result.rightIdx = rightVariant\r\n\r\n  for(let i = 0; i < 4; i++){\r\n    if(i === rightVariant) continue\r\n    result.vars[i] = getVariant(getArticle())\r\n  }\r\n  \r\n  return result\r\n}\r\n\r\nexport default questionReducer","const initialState = [\r\n    {\r\n        article_text: \"Ready\",\r\n        article_num: \"Cancel\"\r\n    }\r\n]\r\n\r\nexport default (state = initialState, action) => {\r\n    return state\r\n}","const APPS = [\r\n    \"codexes\",\r\n    \"marga\"\r\n]\r\n\r\nconst initialState = {\r\n    app: localStorage.getItem(\"app\") || APPS[0],\r\n    modalOpen: true,\r\n    names: new Set([]), //keep state value\r\n    savingNames: new Set([]), //save for cancel-function\r\n    fullNames: [\"UK\", \"UPK\"]\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    let { name } = action\r\n    let { names } = state\r\n    let { savingNames } = state\r\n\r\n    switch(action.type){\r\n        case \"CHANGE_APP\":\r\n            let app = state.app == \"codexes\" ? \"marga\" : \"codexes\" \r\n            return {\r\n                ...state,\r\n                app\r\n            }\r\n        case \"MODAL_TOGGLE\":\r\n            return {\r\n                ...state,\r\n                modalOpen: !state.modalOpen,\r\n            }\r\n        case \"DELETE_NAME\":\r\n            names.delete(name)\r\n            return {\r\n                ...state,\r\n                names\r\n            }\r\n        case \"ADD_NAME\":\r\n            names.add(name)\r\n            return {\r\n                ...state,\r\n                names\r\n            }\r\n        case \"SAVE_CHANGE_NAMES\":\r\n            localStorage.setItem(\"app\", state.app)\r\n            return {\r\n                ...state,\r\n                savingNames: names\r\n            }\r\n        case \"CANCEL_CHANGE_NAMES\":\r\n            return {\r\n                ...state,\r\n                names: savingNames\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\"\r\n\r\nimport { default as main } from \"./main\"\r\nimport { default as question } from \"./question\"\r\nimport { default as variants } from './variants'\r\nimport { default as settings } from \"./settings\"\r\n\r\nexport default combineReducers({main, question, variants, settings})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from \"redux\"\nimport logger from 'redux-logger'\nimport { BrowserRouter } from \"react-router-dom\"\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {default as reducer} from \"./reducers\"\n \n// Logger with default options\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n)\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App /> \n    </Provider>\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}