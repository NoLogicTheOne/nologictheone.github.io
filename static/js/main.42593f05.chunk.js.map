{"version":3,"sources":["serviceWorker.js","pages/Marga.js","utils/marga/updateMarkup.js","utils/marga/updateMargin.js","actionCreators/index.js","actionCreators/refreshInvert.js","actionCreators/addCount.js","actionCreators/addName.js","actionCreators/deleteName.js","actionCreators/modalToggle.js","actionCreators/saveChangeNames.js","actionCreators/cancelChangeNames.js","actionCreators/setQuestion.js","actionCreators/changeApp.js","actionCreators/toDeep.js","actionCreators/toHight.js","components/CascadingPage.js","pages/Cascading.js","components/variant.js","components/question.js","components/ModalSetting.js","pages/CodexesGame.js","App.js","reducers/main.js","codexes/index.js","utils/random.js","reducers/question.js","reducers/variants.js","reducers/settings.js","reducers/cascading.js","reducers/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Marga","storageMarkup","localStorage","getItem","storageMargin","useState","margin","setMargin","markup","setMarkup","iconSize","setIconSize","update","name","value","val","format","setItem","num","String","Math","round","replace","handleChange","e","target","updateMarkup","Number","updateMargin","Header","as","icon","textAlign","to","Icon","size","className","Subheader","Input","fluid","action","color","labelPosition","content","style","fontSize","type","min","actionPosition","onChange","onFocus","onBlur","max","isWin","names","id","connect","cascading","dispatch","toDeep","AC","toHight","props","base","parentBase","breadcrumbs","items","reduce","acc","curr","renderBreadcrumbs","map","c","i","item","Button","key","onClick","renderItem","length","currentBase","Radio","toggle","label","Variant","variant","invert","idx","showed","handleClick","answerIdx","articleNum","text","articleText","show","isRight","onDoubleClick","preventDefault","question","settings","main","refreshInvert","addCount","dispatchProps","setQuestion","vars","rightVariant","rightIdx","variants","rightArticle","rightText","selected","setSelected","readyToAnswer","setReadyToAnswer","answered","setAnswered","0","1","2","3","colors","setColors","setShowed","win","setWin","nextQuestion","cleanAll","handleCheck","handleWin","handleLose","marker","newMask","selectedIdx","onVariantClick","checked","Codexes","changeApp","app","modalToggle","addName","deleteName","save","cancel","fullNames","modalOpen","Modal","open","Content","display","currentName","Checkbox","header","defaultChecked","has","Actions","count_wins","count_loose","path","component","initialState","UK","UPK","database","random","Object","keys","Data","a","isCodex","getQuestion","Set","result","getArticle","codexName","codex","article","articles","shortName","Codex","randomIdx","sample","getRandomArticle","getRandomCodex","getVariant","questionReducer","article_text","article_num","savingNames","combineReducers","delete","add","push","filter","pop","store","createStore","reducer","applyMiddleware","logger","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.42593f05.chunk.js","sourcesContent":["const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from \"react\"\r\nimport { Input, Header, Icon } from \"semantic-ui-react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {updateMarkup, updateMargin} from \"../utils/marga\"\r\n\r\nconst Marga = () => {\r\n    let storageMarkup = localStorage.getItem(\"markup\") || \"\"\r\n    let storageMargin = localStorage.getItem(\"margin\") || \"\"\r\n    \r\n    let [margin, setMargin] = useState(storageMargin)\r\n    let [markup, setMarkup] = useState(storageMarkup)\r\n    let [iconSize, setIconSize] = useState(\"h1\")\r\n\r\n    const update = (name, value) => {\r\n        let val = format(value)\r\n        if(name === \"margin\"){\r\n            setMargin(val)\r\n        } else {\r\n            setMarkup(val)\r\n        }\r\n        localStorage.setItem(name, val)\r\n    }\r\n\r\n    const format = num => String(Math.round(num)).replace(/^0+/, '')\r\n\r\n    const handleChange = name => e => {\r\n        let value = e.target.value\r\n        update(name, value)\r\n        if(name === \"margin\"){\r\n            update(\"markup\", updateMarkup(value))\r\n        } else {\r\n            update(\"margin\", updateMargin(value))\r\n        }\r\n    } \r\n\r\n    return (<>\r\n        <br/>\r\n        <Header as={iconSize} icon textAlign=\"center\">\r\n            <Link to=\"/cascading\">\r\n                <Icon name='settings' size=\"small\" className={\"marga__icon-small\"}/>\r\n            </Link>\r\n            Markup vs. Margin\r\n            <Header.Subheader>\r\n            Просто вводи числа, любимая женушка!\r\n            </Header.Subheader>\r\n        </Header>\r\n        <br/>\r\n        <br/>\r\n        <Input fluid\r\n            action={{\r\n                color: 'teal',\r\n                labelPosition: 'left',\r\n                icon: 'cart',\r\n                content: 'Markup',\r\n                style: {fontSize: \"1.4rem\"}\r\n            }}\r\n            style={{fontSize: \"2rem\"}}\r\n            type=\"number\"\r\n            min=\"0\"\r\n            actionPosition='left'\r\n            value={format(markup)}\r\n            onChange={handleChange(\"markup\")}\r\n            onFocus={e=> {\r\n                setIconSize(\"h4\")\r\n                update(\"markup\", 0)\r\n            }}\r\n            onBlur={e=> {\r\n                setIconSize(\"h2\")\r\n            }}\r\n        />\r\n        <br />\r\n        <Input fluid\r\n            action={{\r\n                color: 'teal',\r\n                labelPosition: 'left',\r\n                icon: 'cart',\r\n                content: 'Margin',\r\n                style: {fontSize: \"1.4rem\"}\r\n            }}\r\n            style={{fontSize: \"2rem\"}}\r\n            actionPosition='left'\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={format(margin)}\r\n            onChange={handleChange(\"margin\")}\r\n            onFocus={e=> {\r\n                setIconSize(\"h4\")\r\n                update(\"margin\", 0)\r\n            }}\r\n            onBlur={e=> {\r\n                setIconSize(\"h2\")\r\n            }}\r\n        />\r\n    </>)\r\n}\r\n\r\nexport {Marga}","export default margin => {\r\n    return margin * 100 / (100 - margin)\r\n}","export default markup => {\r\n    // there will handdle errors later\r\n    return markup * 100 / (100 + Number(markup))\r\n}","import {default as refreshInvert} from \"./refreshInvert\"\r\nimport {default as addCount} from \"./addCount\"\r\nimport {default as addName} from \"./addName\"\r\nimport {default as deleteName} from \"./deleteName\"\r\nimport {default as modalToggle} from \"./modalToggle\"\r\nimport {default as saveChangeNames} from \"./saveChangeNames\"\r\nimport {default as cancelChangeNames} from \"./cancelChangeNames\"\r\nimport {default as setQuestion} from \"./setQuestion\"\r\nimport {default as changeApp} from \"./changeApp\"\r\nimport {default as toDeep} from \"./toDeep\"\r\nimport {default as toHight} from \"./toHight\"\r\n\r\nexport default {\r\n    refreshInvert,\r\n    addCount,\r\n    addName,\r\n    deleteName,\r\n    modalToggle,\r\n    saveChangeNames,\r\n    cancelChangeNames,\r\n    setQuestion,\r\n    changeApp,\r\n    toDeep,\r\n    toHight\r\n}","export default () => ({\r\n    type: \"REFRESH_INVERT\"\r\n})","export default isWin => ({\r\n    type: \"ADD_COUNT\",\r\n    isWin\r\n})","export default name => ({\r\n    type: \"ADD_NAME\",\r\n    name\r\n})","export default name => ({\r\n    type: \"DELETE_NAME\",\r\n    name\r\n})","export default () => ({\r\n    type: \"MODAL_TOGGLE\"\r\n})","export default () => ({\r\n    type: \"SAVE_CHANGE_NAMES\"\r\n})","export default () => ({\r\n    type: \"CANCEL_CHANGE_NAMES\"\r\n})","export default (names) => ({\r\n    type: \"SET_QUESTION\",\r\n    names\r\n})","export default name => ({\r\n    type: \"CHANGE_APP\",\r\n    name\r\n})","export default (id) => ({\r\n    type: \"TO_DEEP\",\r\n    id\r\n})","export default () => ({\r\n    type: \"TO_HIGHT\"\r\n})","import React from \"react\"\r\nimport { Button } from \"semantic-ui-react\"\r\nimport {default as AC} from \"../actionCreators\"\r\nimport { connect } from \"react-redux\"\r\n\r\nconst CascadingPage = (props) => {\r\n    const {base} = props\r\n    const {parentBase, breadcrumbs} = props\r\n    const {toDeep, toHight} = props\r\n\r\n    const {items = []} = base\r\n\r\n    const renderItem = (item, i) => (\r\n        <Button fluid key={i} onClick={() => toDeep(item.id)}>\r\n            {item.name}\r\n        </Button>\r\n    )\r\n    const renderBack = () => (<Button content=\"Go back\" icon='left arrow' labelPosition='left' onClick={() => toHight()}/>\r\n    )\r\n    const renderBreadcrumbs = breadcrumbs => \r\n        breadcrumbs.reduce((acc, curr) => acc ? acc + \" > \" + curr : curr, \"\")\r\n\r\n    return (<>\r\n        <h3>{renderBreadcrumbs(breadcrumbs)}</h3>\r\n        {items.map((c,i) => renderItem(c, i))}\r\n        {parentBase.length ? renderBack() : null}\r\n    </>)\r\n}\r\n\r\nconst MSTP = state => state.cascading\r\n\r\nconst MDTP = dispatch => ({\r\n    toDeep: id => dispatch(AC.toDeep(id)),\r\n    toHight: () => dispatch(AC.toHight())\r\n})\r\n\r\nexport default connect(MSTP, MDTP)(CascadingPage)","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport { Icon, Radio } from \"semantic-ui-react\"\r\n \r\nimport {default as CascadingPage} from \"../components/CascadingPage\"\r\n\r\nconst Cascading = (props) => {\r\n    let { currentBase } = props\r\n    \r\n    return(<>\r\n        <Link to=\"/marga\">\r\n            <Icon name=\"settings\" size=\"big\"/>\r\n            Back to the Markup vs. Margin\r\n        </Link>\r\n        <br />\r\n        <br />\r\n        <Radio toggle label=\"Game Mode\" className=\"cascading__game-mode-toggler\"></Radio>\r\n        <CascadingPage base={currentBase}/>\r\n        \r\n    </>)\r\n}\r\n\r\nconst MSTP = state => state.cascading\r\n\r\nexport default connect(MSTP)(Cascading)","import React from 'react'\r\n\r\nexport const Variant = ({variant, invert, color, idx, showed, handleClick}) => {\r\n    let answerIdx = \"answer\" + idx\r\n    let num = variant.articleNum\r\n    let text = variant.articleText\r\n    let show = showed && !variant.isRight\r\n\r\n    return (<>\r\n        <div className=\"millionare__variant\" \r\n            id={answerIdx}\r\n            style={{\"backgroundColor\": color}}\r\n            onClick={handleClick}\r\n            onDoubleClick={e=>{e.preventDefault()}}>\r\n\r\n            {invert \r\n                ? text + (show ? (\" ( \" + num + \" )\") : \"\") \r\n                : num + (show ? (\" ( \" + text + \" )\") : \"\")}\r\n        </div>\r\n    </>)\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Variant } from './variant';\r\n\r\nimport \"./question.css\"\r\nimport { connect } from 'react-redux';\r\nimport {default as AC} from \"../actionCreators\"\r\n\r\nfunction Question(props) {\r\n    \r\n    let {\r\n        invert, \r\n        vars, \r\n        rightVariant,\r\n        rightIdx,\r\n        addCount,\r\n        setQuestion,\r\n        refreshInvert\r\n    } = props\r\n\r\n    let variants = vars\r\n    let rightArticle = \"Статья \" + rightVariant.articleNum\r\n    let rightText = rightVariant.articleText\r\n    let defaultColors = {\r\n        0: \"transparent\",\r\n        1: \"transparent\",\r\n        2: \"transparent\",\r\n        3: \"transparent\"\r\n    }\r\n\r\n    let [selected, setSelected] = useState(-1)\r\n    let [readyToAnswer, setReadyToAnswer] = useState(false)\r\n    let [answered, setAnswered] = useState(false)\r\n    let [colors, setColors] = useState(defaultColors)\r\n    let [showed, setShowed] = useState(false)\r\n    let [win, setWin] = useState(false)\r\n    \r\n    const nextQuestion = () => {\r\n        cleanAll()\r\n        setAnswered(false)\r\n        setReadyToAnswer(false)\r\n        setShowed(false)\r\n        addCount(win)\r\n        setQuestion()\r\n        refreshInvert()\r\n    }\r\n\r\n    const handleCheck = (e) => {\r\n        if(selected === -1) return\r\n        \r\n        if(answered) {\r\n            setAnswered(false)\r\n            nextQuestion()\r\n        } \r\n        setWin(false)\r\n        if(selected === rightIdx){\r\n            handleWin()\r\n        } else {\r\n            handleLose(selected)\r\n        }\r\n        setShowed(true)\r\n        setReadyToAnswer(false)\r\n        setAnswered(true)\r\n    }\r\n\r\n    const marker = (idx, color=\"transparent\") => {\r\n        let newMask = colors\r\n        newMask[idx] = color\r\n        setColors(newMask)\r\n    }\r\n\r\n    function cleanAll() {\r\n        for(let i = 0; i < 4; i++){\r\n            marker(i)\r\n        }\r\n    }\r\n\r\n    const handleLose = (selectedIdx) => {\r\n        marker(selectedIdx, \"red\")\r\n        marker(rightIdx, \"green\")\r\n    }\r\n    \r\n    const handleWin = () => {\r\n        marker(rightIdx, \"green\")\r\n        setWin(true)\r\n    }\r\n\r\n    const onVariantClick = (idx) => () => {\r\n        if(readyToAnswer && (selected === idx)){\r\n            handleCheck()\r\n            return\r\n        }\r\n        if(answered){\r\n            return\r\n        }\r\n        cleanAll()\r\n        setSelected(idx)\r\n        setReadyToAnswer(true)\r\n        marker(idx, \"yellow\")\r\n    }\r\n\r\n    return (<>\r\n        <h3>\r\n            {invert ? rightArticle : rightText}\r\n        </h3>\r\n        {\r\n            variants.map((variant, idx) => {\r\n                return (<Variant \r\n                    key={idx}\r\n                    idx={idx}\r\n                    color={colors[idx]}\r\n                    checked={selected === idx}\r\n                    handleClick={onVariantClick(idx)}\r\n                    invert={invert}\r\n                    showed={showed}\r\n                    variant={variant}/>)\r\n            })\r\n        }\r\n        {\r\n            readyToAnswer\r\n                ? <button onClick={handleCheck}>Готов ответить</button>\r\n                : <button onClick={nextQuestion}>Следующий вопрос</button>\r\n        }\r\n    </>)\r\n}\r\n\r\nconst MSTP = state => {\r\n    return ({\r\n        ...state.question.question,\r\n        names: state.settings.names,\r\n        invert: state.main.invert\r\n    })\r\n}\r\n\r\nconst MDTP = dispatch => ({\r\n    dispatch,\r\n    refreshInvert: () => dispatch(AC.refreshInvert()),\r\n    addCount: isWin => dispatch(AC.addCount(isWin)),\r\n})\r\n\r\nconst MP = (state, dispatchProps) => {\r\n    let { names } = state\r\n    let { dispatch } = dispatchProps\r\n    \r\n    return ({\r\n        ...state,\r\n        ...dispatchProps,\r\n        setQuestion: () => dispatch(AC.setQuestion(names))\r\n    })\r\n}\r\n\r\nexport default connect(MSTP, MDTP, MP)(Question)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Icon, Modal, Header, Button, Checkbox, Radio } from 'semantic-ui-react'\r\nimport { Link } from \"react-router-dom\"  \r\n\r\nimport { default as AC } from \"../actionCreators\"\r\n\r\nfunction ModalSetting(props) {\r\n    let { changeApp, app } = props\r\n    let { fullNames, modalOpen } = props\r\n    let { modalToggle, addName, deleteName } = props\r\n    let { save, cancel, names } = props\r\n    let { Codexes, setQuestion } = props \r\n    \r\n    const applicationToggler = () => {\r\n      return (<>\r\n        <Radio\r\n          label=\"Cascading\"\r\n          name=\"chooseApp\"\r\n          checked={app === \"cascading\"}\r\n          onClick={e => changeApp(\"cascading\")}\r\n          style={{display: \"block\"}}>\r\n        </Radio>\r\n        <Radio\r\n          label=\"Markup vs Margin\"\r\n          name=\"chooseApp\"\r\n          checked={app === \"marga\"}\r\n          onClick={e => changeApp(\"marga\")}\r\n          style={{display: \"block\"}}>\r\n        </Radio>\r\n        <Radio\r\n          label=\"CodexesGame\"\r\n          name=\"chooseApp\"\r\n          checked={ app === \"codexes\" }\r\n          onClick={e => changeApp(\"codexes\")}>\r\n        </Radio>\r\n      </>)\r\n    }\r\n\r\n    const getCodexesCheckboxes = () => {\r\n        return fullNames.map((currentName, idx) => (<>\r\n          <Checkbox \r\n            key={idx} \r\n            label={Codexes[currentName].header}\r\n            defaultChecked={names.has(currentName)}\r\n            onChange={e => {\r\n              if(names.has(currentName)){\r\n                deleteName(currentName)\r\n              } else {\r\n                addName(currentName)\r\n              }\r\n            }}/>\r\n          <br/>\r\n        </>))\r\n      }\r\n\r\n    return (<Modal open={modalOpen}>\r\n      <Header icon='archive' content='Настройте выдачу вопросов' />\r\n      <Modal.Content>\r\n        {applicationToggler()}\r\n      </Modal.Content>\r\n      <Modal.Content>\r\n        {getCodexesCheckboxes()}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color='red' onClick={e => {\r\n          modalToggle()\r\n          cancel()\r\n        }}>\r\n          <Icon name='cancel' /> Отменить изменения\r\n        </Button>\r\n        <Link to={\"/\" + app}>\r\n          <Button color='green' onClick={e => {\r\n            modalToggle()\r\n            save()\r\n            setQuestion()\r\n          }}>\r\n          <Icon name='checkmark' /> Сохранить\r\n          </Button>\r\n        </Link>\r\n      </Modal.Actions>\r\n    </Modal>)\r\n}\r\n\r\nconst MSTP = state => ({\r\n  ...state.settings,\r\n  Codexes: state.question.Codexes\r\n})\r\n\r\nconst MDTP = dispatch => ({\r\n    dispatch: dispatch,\r\n    changeApp: app => dispatch(AC.changeApp(app)),\r\n    modalToggle: () => dispatch(AC.modalToggle()),\r\n    addName: name => dispatch(AC.addName(name)),\r\n    deleteName: name => dispatch(AC.deleteName(name)),\r\n    save: () => dispatch(AC.saveChangeNames()),\r\n    cancel: () => dispatch(AC.cancelChangeNames())\r\n})\r\n\r\nconst MP = (state, dispatchProps) => {\r\n  let { names } = state\r\n  let { dispatch } = dispatchProps\r\n  \r\n  return ({\r\n      ...state,\r\n      ...dispatchProps,\r\n      setQuestion: () => dispatch(AC.setQuestion(names))\r\n  })\r\n}\r\n\r\nexport default connect(MSTP, MDTP, MP)(ModalSetting)","import React from 'react'\nimport { Icon } from 'semantic-ui-react'\nimport { connect } from \"react-redux\"\n\nimport Question from \"../components/question\"\nimport { default as AC} from \"../actionCreators\"\nimport { default as ModalSetting } from '../components/ModalSetting'\n\n\nfunction CodexesGame(props) {\n  // I know about destructurisation\n  let { invert } = props\n  let { count_wins, count_loose } = props\n  let { modalToggle } = props\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Появился УК РФ</h2>\n        <Icon name=\"settings\" size=\"big\" onClick={modalToggle}/> \n        <ModalSetting />\n      </header>\n      <section>\n        <h3>Текущий счет: {count_wins} - {count_loose}</h3>\n      </section>\n      <Question invert={invert}/>\n\n    </div>\n  );\n}\n\nconst MSTP = state => ({\n  ...state.main,\n  names: state.settings.names\n}) \n\nconst MDTP = dispatch => ({\n  dispatch,\n  modalToggle: () => dispatch(AC.modalToggle()),\n})\n\nconst MP = (state, dispatchProps) => {\n  let { names } = state\n  let { dispatch } = dispatchProps\n  \n  return ({\n      ...state,\n      ...dispatchProps,\n      setQuestion: () => dispatch(AC.setQuestion(names))\n  })\n}\n\nexport default connect(MSTP, MDTP, MP)(CodexesGame);\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport {ChooseGame} from \"./pages/ChooseGame\"\nimport {Marga} from \"./pages/Marga\"\nimport Cascading from \"./pages/Cascading\"\nimport CodexesGame from \"./pages/CodexesGame\"\nimport {connect} from \"react-redux\"\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\n\nfunction App({app = \"/choose\"}) {\n  return (<>\n    <Switch>\n      {/* for my sweety wife temporary solution for fastest work*/}\n      {/* <Route path=\"/choose\" component={ChooseGame}/> */}\n      {/* <Route path=\"/codexes\" component={CodexesGame}/> */}\n      <Route path=\"/\" component={Marga}/>\n      {/* <Route path=\"/cascading\" component={Cascading}/> */}\n      {/* <Redirect from=\"/\" to={\"/marga\"}/> */}\n    </Switch>\n  </>);\n}\n\nconst MSTP = state => state.settings\n\nexport default connect(MSTP)(App)\n","const initialState = {\r\n    \"count_wins\": 0,\r\n    \"count_loose\": 0,\r\n    \"invert\": true\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"REFRESH_INVERT\":\r\n            return {\r\n                ...state,\r\n                invert: Math.random() > 0.5\r\n            }\r\n        case \"ADD_COUNT\":\r\n            let { isWin } = action\r\n            console.log(state)\r\n            return {\r\n                ...state,\r\n                count_wins: state.count_wins + Number(!!isWin),\r\n                count_loose: state.count_loose + Number(!isWin)\r\n            }\r\n    }\r\n    return state\r\n}","import {default as UPK} from \"./UPK.json\"\r\nimport {default as UK} from \"./UK.json\"\r\nimport {default as database} from \"./database.json\"\r\n\r\nexport default {\r\n    UK,\r\n    UPK,\r\n    database\r\n}","export default (min, max) => ((Math.random * (max - min)) | 0) + min","import { default as Data } from \"../codexes\"\r\nimport { sample } from \"lodash\"\r\n\r\nimport random from \"../utils/random\"\r\n\r\nconst Codexes = Object.keys(Data)\r\n  .reduce((a, c) => Data[c].isCodex === true ? {...a, [c]: Data[c]} : a, {})\r\n\r\nconst initialState = {\r\n  Codexes,\r\n  question: getQuestion([], Codexes)\r\n}\r\n\r\nconst questionReducer = (state = initialState, action) => {\r\n  let { names } = action\r\n  switch (action.type){\r\n    case \"SET_QUESTION\":\r\n      return {\r\n        ...state,\r\n        question: getQuestion(names)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction getRandomArticle(codexName, idx){\r\n  const codex = Codexes[codexName]\r\n  if(idx) {\r\n    return {\r\n      article: codex.articles[idx],\r\n      idx: idx + \" \" + codex.shortName,\r\n      Codex: codex.id\r\n    }\r\n  }\r\n\r\n  let randomIdx = sample(Object.keys(codex.articles))\r\n  \r\n  return {\r\n    article: codex.articles[randomIdx],\r\n    idx: randomIdx + \" \" + codex.shortName,\r\n    Codex: codex.id\r\n  }\r\n}\r\n\r\nfunction getQuestion(names = new Set([])){    \r\n  let result = {\r\n    vars: []\r\n  }\r\n\r\n  const getRandomCodex = () => {\r\n    let keys = names.size ? [...names] : Object.keys(Codexes)\r\n    return sample(keys)\r\n  }\r\n\r\n  const getArticle = idx => getRandomArticle(getRandomCodex(), idx)\r\n\r\n  const getVariant = ({idx: articleNum, article: articleText}, isRight) => ({\r\n    articleNum,\r\n    articleText,\r\n    isRight,\r\n    color: 'transparent'\r\n  })\r\n\r\n  let rightVariant = random(0, 3)\r\n  result.vars[rightVariant] = getVariant(getArticle(), true)\r\n  result.rightVariant =  result.vars[rightVariant]\r\n  result.rightIdx = rightVariant\r\n\r\n  for(let i = 0; i < 4; i++){\r\n    if(i === rightVariant) continue\r\n    result.vars[i] = getVariant(getArticle())\r\n  }\r\n  \r\n  return result\r\n}\r\n\r\nexport default questionReducer","const initialState = [\r\n    {\r\n        article_text: \"Ready\",\r\n        article_num: \"Cancel\"\r\n    }\r\n]\r\n\r\nexport default (state = initialState, action) => {\r\n    return state\r\n}","const initialState = {\r\n    app: localStorage.getItem(\"app\") || \"choose\",\r\n    modalOpen: true,\r\n    names: new Set([]), //keep state value\r\n    savingNames: new Set([]), //save for cancel-function\r\n    fullNames: [\"UK\", \"UPK\"]\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    let { name } = action\r\n    let { names } = state\r\n    let { savingNames } = state\r\n\r\n    switch(action.type){\r\n        case \"CHANGE_APP\": \r\n            return {\r\n                ...state,\r\n                app: name\r\n            }\r\n        case \"MODAL_TOGGLE\":\r\n            return {\r\n                ...state,\r\n                modalOpen: !state.modalOpen,\r\n            }\r\n        case \"DELETE_NAME\":\r\n            names.delete(name)\r\n            return {\r\n                ...state,\r\n                names\r\n            }\r\n        case \"ADD_NAME\":\r\n            names.add(name)\r\n            return {\r\n                ...state,\r\n                names\r\n            }\r\n        case \"SAVE_CHANGE_NAMES\":\r\n            localStorage.setItem(\"app\", state.app)\r\n            return {\r\n                ...state,\r\n                savingNames: names\r\n            }\r\n        case \"CANCEL_CHANGE_NAMES\":\r\n            return {\r\n                ...state,\r\n                names: savingNames\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { default as database } from \"../codexes/database.json\"\r\n\r\nconst initialState = {\r\n    ...database,\r\n    currentBase: {...database},\r\n    breadcrumbs: [],\r\n    parentBase: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    const { id } = action\r\n    let {parentBase} = state\r\n    let {currentBase} = state\r\n    let {breadcrumbs} = state\r\n    \r\n    switch (action.type){\r\n        case \"TO_DEEP\":\r\n            parentBase.push(currentBase)\r\n            currentBase = currentBase.items.filter(c => c.id == id)[0]\r\n            breadcrumbs.push(currentBase.name)\r\n            return {\r\n                ...state,\r\n                parentBase,\r\n                currentBase,\r\n                breadcrumbs\r\n            }\r\n        case \"TO_HIGHT\":\r\n            currentBase = parentBase.pop()\r\n            breadcrumbs.pop()\r\n            return {\r\n                ...state,\r\n                parentBase,\r\n                currentBase,\r\n                breadcrumbs\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\"\r\n\r\nimport { default as main } from \"./main\"\r\nimport { default as question } from \"./question\"\r\nimport { default as variants } from './variants'\r\nimport { default as settings } from \"./settings\"\r\nimport { default as cascading } from \"./cascading\"\r\n\r\nexport default combineReducers({main, question, variants, settings, cascading})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from \"redux\"\nimport logger from 'redux-logger'\nimport { BrowserRouter } from \"react-router-dom\"\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport App from './App';\n\nimport {default as reducer} from \"./reducers\"\n \n// Logger with default options\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n)\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App /> \n    </Provider>\n  </BrowserRouter>, \n  document.getElementById('root')\n)\n\nserviceWorker.register();"],"sourceRoot":""}